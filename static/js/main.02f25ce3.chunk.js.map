{"version":3,"sources":["Assets/Logo.jpg","components/Menu.js","components/Playlist.js","components/Content.js","components/playerPlayList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","pages","ResponsiveAppBar","_React$useState","React","_React$useState2","Object","slicedToArray","anchorElNav","setAnchorElNav","_React$useState3","_React$useState4","handleCloseNavMenu","react","AppBar","position","style","background","color","Container","maxWidth","Toolbar","disableGutters","Typography","variant","noWrap","component","href","sx","mr","display","xs","md","fontWeight","textDecoration","Box","flexGrow","IconButton","size","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu_default","a","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","key","textAlign","react_router_dom","to","src","Logo","alt","height","Button","Playlist","_ref","vidsData","setSelected","selected","_useState","useState","_useState2","selectedVid","setSelectedVid","react_default","createElement","List","width","bgcolor","marginTop","overflow","maxHeight","fontSize","console","log","x","i","Fragment","ListItemButton","alignItems","snippet","resourceId","videoId","handleSelection","ListItemAvatar","Avatar","thumbnails","default","url","ListItemText","primary","title","ListItemIcon","Star_default","Divider","Content","vids","setvids","_useState3","_useState4","loading","setLoading","_useState5","_useState6","_useState7","_useState8","setUrl","useEffect","getData","axios","get","then","response","data","items","catch","error","className","ReactPlayer_default","muted","playing","controls","components_Playlist","e","videoControler","PlayerPlayList","src_components_Content","App","components_Menu","playerPlayList","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02f25ce3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.5e93cacb.jpg\";","// import { AppBar, IconButton, Toolbar, Typography } from \"@mui/material\";\r\n// import React, { useState } from \"react\";\r\n// import MenuIcon from \"@mui/icons-material/Menu\";\r\n// import Drawer from \"./Drawer\";\r\n// import Logo from \"../Assets/Logo.jpg\";\r\n\r\n// function Menu() {\r\n//   const [open, setOpen] = useState(false);\r\n//   return (\r\n//     <div>\r\n//       <AppBar position=\"fixed\" style={{ background: \"#f2cc25\", color: \"#000\" }}>\r\n//         <Toolbar variant=\"dense\">\r\n//           {/* <IconButton\r\n//             edge=\"start\"\r\n//             color=\"inherit\"\r\n//             aria-label=\"menu\"\r\n//             sx={{ mr: 2 }}\r\n//           >\r\n//             <MenuIcon onClick={() => setOpen(true)} />\r\n//           </IconButton> */}\r\n//           <img src={Logo} alt=\"logo\" style={{ height: \"50px\" }} />\r\n//           <Typography\r\n//             variant=\"h6\"\r\n//             style={{ fontWeight: 700 }}\r\n//             color=\"inherit\"\r\n//             component=\"div\"\r\n//           >\r\n//             Namaste JavaScript\r\n//           </Typography>\r\n//         </Toolbar>\r\n//       </AppBar>\r\n//       <Drawer open={open} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Menu;\r\nimport * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport AdbIcon from \"@mui/icons-material/Adb\";\r\nimport { Image } from \"@mui/icons-material\";\r\nimport Logo from \"../Assets/Logo.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst pages = [\"Home\", \"About\", \"Contact\"];\r\n\r\nconst ResponsiveAppBar = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" style={{ background: \"#f2cc25\", color: \"#000\" }}>\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          {/* <img src={Logo} alt=\"logo\" style={{ height: \"50px\" }} /> */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"/namasteJavascript\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: \"none\", md: \"flex\" },\r\n              fontWeight: 700,\r\n              color: \"inherit\",\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            Namaste JavaScript\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\",\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: \"block\", md: \"none\" },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n\r\n          <Link to=\"/namasteJavascript\">\r\n            <img src={Logo} alt=\"logo\" style={{ height: \"50px\" }} />\r\n          </Link>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"/namasteJavascript\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: \"flex\", md: \"none\" },\r\n              flexGrow: 1,\r\n              fontWeight: 700,\r\n              color: \"inherit\",\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            Namaste JavaScript\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\r\n            {pages.map((page) => (\r\n              <Button\r\n                key={page}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ color: \"#000\", display: \"block\", fontWeight: 500 }}\r\n              >\r\n                {page}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default ResponsiveAppBar;\r\n","import {\r\n  Avatar,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\n\r\nfunction Playlist({ vidsData, selected, setSelected }) {\r\n  const [selectedVid, setSelectedVid] = useState(0);\r\n  const handleSelection = (i, x) => {\r\n    setSelectedVid(i);\r\n    setSelected(x.snippet.resourceId.videoId);\r\n  };\r\n  return (\r\n    <List\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 900,\r\n        bgcolor: \"background.paper\",\r\n        marginTop: \"100px\",\r\n        overflow: \"auto\",\r\n        position: \"relative\",\r\n        maxHeight: 500,\r\n        fontSize: \"1.5rem\",\r\n      }}\r\n    >\r\n      {console.log(vidsData)}\r\n      {vidsData.map((x, i) => {\r\n        return (\r\n          <>\r\n            <ListItemButton\r\n              alignItems=\"flex-start\"\r\n              selected={i === selectedVid}\r\n              onClick={() => handleSelection(i, x)}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  alt=\"Remy Sharp\"\r\n                  src={x.snippet.thumbnails.default.url}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText primary={x.snippet.title} />\r\n              <ListItemIcon>\r\n                <StarIcon />\r\n              </ListItemIcon>\r\n            </ListItemButton>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n          </>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default Playlist;\r\n","import { Container } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport axios from \"axios\";\r\nimport \"./Content.css\";\r\nimport Playlist from \"./Playlist\";\r\n\r\nconst Content = () => {\r\n  const [vids, setvids] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selected, setSelected] = useState();\r\n  const [url, setUrl] = useState(\"\");\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(\r\n        \"https://youtube.googleapis.com/youtube/v3/playlistItems?part=contentDetails%2Csnippet&maxResults=25&playlistId=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP&key=AIzaSyA5S3uU7htP_rqhVWmwNPT6CWGMuDF2hLw\"\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data) {\r\n          let { items } = response.data;\r\n          setvids(items);\r\n          setLoading(false);\r\n          setUrl(\r\n            \"https://www.youtube.com/watch?v=\" +\r\n              items[0].snippet.resourceId.videoId\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const videoControler = (e) => {\r\n    debugger;\r\n    console.log(e, \"hellooooooooooooooooooo\");\r\n    setUrl(\"https://www.youtube.com/watch?v=\" + e);\r\n  };\r\n\r\n  //GET https://youtube.googleapis.com/youtube/v3/playlistItems?part=contentDetails%2Csnippet&maxResults=25&playlistId=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP&key=[YOUR_API_KEY] HTTP/1.1\r\n  //AIzaSyA5S3uU7htP_rqhVWmwNPT6CWGMuDF2hLw\r\n  return loading ? (\r\n    <div>loading...</div>\r\n  ) : (\r\n    <Container maxWidth=\"md\">\r\n      <div className=\"player-wrapper\">\r\n        <ReactPlayer\r\n          className=\"react-player\"\r\n          url={url}\r\n          muted={false}\r\n          playing={false}\r\n          controls={true}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n        {/* )) \r\n         } */}\r\n      </div>\r\n      <Playlist vidsData={vids} setSelected={(e) => videoControler(e)} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport Content from \"./Content\";\r\nimport Playlist from \"./Playlist\";\r\n\r\nfunction PlayerPlayList() {\r\n  return (\r\n    <div>\r\n      <Content />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerPlayList;\r\n","import Menu from \"./components/Menu\";\nimport React from \"react\";\nimport reactDom from \"react-dom\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport PlayerPlayList from \"./components/playerPlayList\";\n\nfunction App() {\n  return (\n    <div>\n      <Menu />\n      <PlayerPlayList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}